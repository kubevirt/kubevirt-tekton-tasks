---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: "0.43.0"
    tekton.dev/categories: Automation
    tekton.dev/tags: kubevirt
    tekton.dev/displayName: "{{ display_name_provider }} {{ nice_name }}"
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/arm64"
    artifacthub.io/maintainers: |
      - name: {{ maintainer_name }}
        email: {{ maintainer_email }}
    artifacthub.io/provider: {{ provider }}
    artifacthub.io/recommendations: |
      - url: {{ recommendation_url }}
    artifacthub.io/category: integration-delivery
  labels:
    app.kubernetes.io/version: {{ catalog_version }}
  name: {{ task_name }}
spec:
  description: >-
    Automates creation of the KubeVirt virtual machine.
    User can create VM from manifest or with the same parameters as for virtctl.
    It is possible to immediatelly start the vm after creation with startVM parameter.
  params:
    - name: manifest
      description: YAML manifest of a VirtualMachine resource to be created.
      default: ""
      type: string
    - name: virtctl
      description: "Parameters for virtctl create vm command that will be used to create VirtualMachine."
      default: ""
      type: string
    - name: namespace
      description: Namespace where to create the VM. (defaults to manifest namespace or active namespace)
      default: ""
      type: string
    - name: startVM
      description: Set to true or false to start / not start vm after creation. In case of runStrategy is set to Always, startVM flag is ignored.
      default: ""
      type: string
    - name: runStrategy
      description: Set runStrategy to VM. If runStrategy is set, vm.spec.running attribute is set to nil.
      default: ""
      type: string
    - name: setOwnerReference
      description: Set owner reference to the new object created by the task run pod. Allowed values true/false
      type: string
      default: "false"
  results:
    - name: name
      description: The name of a VM that was created.
    - name: namespace
      description: The namespace of a VM that was created.
  steps:
    - name: createvm
      image: "{{ main_image }}:{{ version }}"
      command:
        - create-vm
      args:
        - "--output=yaml"
      env:
        - name: VM_MANIFEST
          value: $(params.manifest)
        - name: VM_NAMESPACE
          value: $(params.namespace)
        - name: VIRTCTL
          value: $(params.virtctl)
        - name: START_VM
          value: $(params.startVM)
        - name: SET_OWNER_REFERENCE
          value: $(params.setOwnerReference)
        - name: RUN_STRATEGY
          value: $(params.runStrategy)
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      securityContext:
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - "ALL"
        seccompProfile:
          type: RuntimeDefault
